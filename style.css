/* 
Color pallete. This section defines variables for the color pallete,
so that we can refer to particular colors by name instead of hexadecimal values.
This is applied to the 'root' psuedo-element, which just means that these color
variables are available to be used anywhere in our html document
*/
:root {
    --white-font: #FFFFFF;
    --black-font: #000000;
    /* add in other color variables for color pallete */
}

/* Defines the main container size, we are limiting to 72em max and centring in the viewport */
.main-container {
    max-width: 72em;
    margin: 0 auto;
    font-family: Inter;
    /* TODO: set the main font color */
}

/* Here we define the aspects of style of our elements other than their grid layout */
.banner {
    /* TODO: banner styling */
}

.introduction {
    /* TODO Style?
}

.banner-title {
    /* TODO: banner main title font styling */
}

.banner-subtitle {
    /* TODO: banner subtitle font styling */
}

.info-card {
    /* TODO: style the card as a column based flexbox with rounded corners */
}

/* this is the equivalent of setting the image rectangle to "Fill Container" in Figma */ 
.infocard-image {
    width: 100%;
}

.infocard-blurb {
    /* TODO: style the blurb with padding */
}

.info-title {
    /* TODO: style the 'Our Clients' text font */
}

/* this is the equivalent of setting the image rectangle to "Fill Container" in Figma */ 
.client-icon {
    width: 100%;
}

/* now we create names for the grid areas for specific elements */
#banner {
    /* TODO: give the grid-area a name */
}

#teamMemberCard1 {
    /* TODO: give the grid-area a name */
}

#teamMemberCard2 {
    /* TODO: give the grid-area a name */
}

#teamMemberCard3 {
    /* TODO: give the grid-area a name */
}

#ourClientsTitle {
    /* TODO: give the grid-area a name */
}

#clientIcon1 {
    /* TODO: give the grid-area a name */
}

#clientIcon2 {
    /* TODO: give the grid-area a name */
}

#clientIcon3 {
    /* TODO: give the grid-area a name */
}

#clientIcon4 {
    /* TODO: give the grid-area a name */
}

#clientIcon5 {
    /* TODO: give the grid-area a name */
}

#clientIcon6 {
    /* TODO: give the grid-area a name */
}

#clientIcon7 {
    /* TODO: give the grid-area a name */
}

#clientIcon8 {
    /* TODO: give the grid-area a name */
}

/* Use a flexible layout grid */
.main-container {
    display: grid;
    column-gap: 1em;
}
  
.main-container {
    grid-template:
      "ban ban ban ban ban ban ban ban ban ban ban ban" minmax(8em, auto)
      " .   .   .   .   .   .   .   .   .   .   .   . " minmax(2em, auto)
      "tm1 tm1 tm1 tm1 tm2 tm2 tm2 tm2 tm3 tm3 tm3 tm3" minmax(32em, auto)
      " .   .   .   .   .   .   .   .   .   .   .   . " minmax(4em, auto)
      "oct oct oct oct oct oct oct oct oct oct oct oct" minmax(2em, auto)
      " .   .   .   .   .   .   .   .   .   .   .   . " minmax(2em, auto)
      "ci1 ci1 ci1 ci2 ci2 ci2 ci3 ci3 ci3 ci4 ci4 ci4" minmax(8em, auto)
      " .   .   .   .   .   .   .   .   .   .   .   . " minmax(1em, auto)
      "ci5 ci5 ci5 ci6 ci6 ci6 ci7 ci7 ci7 ci8 ci8 ci8" minmax(8em, auto)
 }

.main-container {
    /* TODO: setup the grid-template for mobile phone layout */
}

@media (min-width: 50em) {
    .main-container {
            /* TODO: setup the grid-template for tablet layout */
    }
}

@media (min-width: 75em) {
    .main-container {
        /* TODO: setup the grid-template for desktop layout */
    }
}
